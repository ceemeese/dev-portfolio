---
//importación de componentes
import StackCard from '../components/StackCard.astro';
import SectionTitle from '../components/SectionTitle.astro';

//importación de datos
import { STACKITEMS } from '../consts/stack.ts';
import { NAVITEMS } from '../consts/stacknav.ts';

//importación iconos
import { Icon } from 'astro-icon/components';


---

<div class="flex flex-col">

    <SectionTitle title="Soft & Tech Skills" />

    <!-- Navbar de Stack  -->
     <div class="relative">
        
        <nav id="navbar" class="flex items-center gap-5 md:justify-between transform transition-custom overflow-x-auto py-2 mb-3 md:mb-1 scrollbar-hidden text-nowrap">
        {
            NAVITEMS.map((item, index) => (
                <a
                    class={`nav__item flex gap-1 items-center relative group transition-custom cursor-pointer ${index === 0 ? 'text-secondary font-semibold' : ''}`}
                    role="button"
                    aria-label={item.label}
                    id={item.id}
                    >

                    <Icon name={`lucide:${item.icon}`}/>
                    { item.label }
                    <span class={`absolute -bottom-1 left-0 w-0 h-0.5 bg-secondary group-hover:w-full transition-all duration-300 ${index === 0 ? 'w-full' : ''}`}> </span>
                </a>
            ))
        }
        </nav>
        <div id="gradient-left" class="absolute top-0 left-0 bottom-0 w-10 bg-gradient-to-r from-primary to-transparent pointer-events-none z-10 md:hidden opacity-0 transition-opacity duration-300"></div>
        <div id="gradient-right" class="absolute top-0 right-0 bottom-0 w-15 bg-gradient-to-l from-primary to-transparent pointer-events-none z-10 md:hidden transition-opacity duration-300"></div>
    </div>


    <div class="w-full overflow-hidden">
        <ul id="stacklist" class="flex py-2 md:py-4 gap-4 justify-center flex-nowrap min-w-max animate-scroll transition-all duration-700 ease-out">
            {[...STACKITEMS].map(item => (
                <StackCard name={item.name} icon={item.icon} classLiName={`scroll-1 stack-item ${item.category} opacity-100 scale-100 transition-all duration-300 ease-in-out`} />
            ))}
            {[...STACKITEMS].map(item => (
                <StackCard name={item.name} icon={item.icon} classLiName={`scroll-2 stack-item hidden block transition-all duration-300 ease-in-out opacity-100 scale-100 ${item.category}`} />
            ))}
        </ul>
    </div>

</div>





<script>

   var selectedNav: string = '';

    const links: HTMLCollection = document.getElementsByClassName('nav__item');
    const stacklist: HTMLElement | null = document.getElementById('stacklist');
    const cards: HTMLCollection = document.getElementsByClassName('scroll-1');
    const cardsScroll: HTMLCollection = document.getElementsByClassName('scroll-2');

        Array.from(links).forEach((link) => {
            link.addEventListener('click', () => {

                selectedNav = link.id;

                //Desactivar links
                Array.from(links).forEach(l => {
                l.classList.remove('text-secondary', 'font-semibold');
                const span = l.querySelector('span');
                if (span) span.classList.remove('w-full');
                });

                // Activar solo el clickeado
                link.classList.add('text-secondary', 'font-semibold');
                const span = link.querySelector('span');
                if (span) span.classList.add('w-full');

                if(selectedNav !== 'todo') {

                    //Layout
                    stacklist?.classList.remove('animate-scroll');
                    stacklist?.classList.remove('h-40');

                    stacklist?.classList.replace('flex-nowrap', 'flex-wrap');                    
                    stacklist?.classList.replace('justify-center', 'justify-start');
                    stacklist?.classList.replace('min-w-max', 'max-w-full');

                    stacklist?.classList.add('justify-between');

                    [...cardsScroll, ...cards].forEach((card) => {
                        card.classList.add('hidden');
                        card.classList.remove('block');
                    });

                    Array.from(cards).forEach((card) => {
                        if (card.classList.contains(selectedNav)) {
                            card.classList.remove('hidden');
                            card.classList.add('block');
                        }
                    });
                    
                } else {
                    
                    stacklist?.classList.add('animate-scroll');
                    stacklist?.classList.add('h-40');

                    stacklist?.classList.replace('flex-wrap', 'flex-nowrap');                    
                    stacklist?.classList.replace('justify-start', 'justify-center');
                    stacklist?.classList.replace('max-w-full', 'min-w-max');

                    stacklist?.classList.remove('justify-between');
                    
                    Array.from(cards).forEach((card) => {
                        card.classList.remove('hidden');
                        card.classList.add('block');
                    });

                    
                    Array.from(cardsScroll).forEach((card) => {
                        card.classList.add('block');
                    });
                }
            });
        });

    function updateGradients() {
        const navbar = document.getElementById('navbar');
        const gradientLeft = document.getElementById('gradient-left');
        const gradientRight = document.getElementById('gradient-right');
        
        if (!navbar || !gradientLeft || !gradientRight) return;
        
        const scrollLeft = navbar.scrollLeft;
        const maxScroll = navbar.scrollWidth - navbar.clientWidth;
        
        gradientLeft.style.opacity = scrollLeft > 5 ? '1' : '0';
        gradientRight.style.opacity = scrollLeft < maxScroll - 5 ? '1' : '0';
    }

    document.addEventListener('DOMContentLoaded', () => {
        const navbar = document.getElementById('navbar');
        if (navbar) {
            navbar.addEventListener('scroll', updateGradients);
            window.addEventListener('resize', updateGradients);
            updateGradients();
        }
    });
 
</script>

<style>

[data-icon] {
    width: 20px;
    height: 20px;
}
</style>